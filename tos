#!/bin/bash

# TOS is the Tom OS update script. This script manages everything for maintaining and upgrading.

RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;35m'
ORANGE='\033[1;33m'
NC='\033[0m' # No Color

export SUDO_ASKPASS='$HOME/bin/rofi/askpass'
name=$(basename "$0")

function help {
    printf "${ORANGE}$name${NC} ${RED}OPTIONS:${NC} (-h|-u|-i)|(-iso| -iso -g)\n"
    printf " -h | --help \t\t\t show this help message\n"
    printf " -u | --update \t\t\t update the entire base system, including AUR packages, config scripts and binaries.\n"
    printf " -g \t\t\t\t $name -iso -g will install arch onto this sytem with a graphical interface\n"
    printf " -iso \t\t\t\t install arch onto this system\n"
    printf " -i | --install \t\t install packages from the main repository and AUR\n"
    
    printf "\n\n${ORANGE}USAGE:${NC}\n"
    printf "$name -u \t\t\t\t This will update your system\n"
    printf "$name -Syu spectacle \t\t This will install the program called spectacle\n"
    printf "$name -iso \t\t\t This will install a fresh copy of arch linux on your system. ${RED}Must be ran as root${NC}\n"
    printf "$name -iso -g\t\t\t Same as above but in a graphical environment. ${RED}Must be ran as root${NC}\n"
}

function installyay {
    cd
    git clone https://aur/archlinux.org/yay.git
    cd yay
    makepkg -si
    cd
    rm -rf yay
}

function update {
    printf "${GREEN} Checking all packages and repo's${NC}\n"
    if [[ "$(which yay)" != "/usr/bin/yay" ]]; then
        installyay
    fi
    
    yay -Syu
    
    if [[ "$(which git)" != "/usr/bin/git" ]]; then
        yay -Syu git
    fi
    
    if [[ ! -d ~/.oh-my-zsh ]]; then
        sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
        git clone https://github.com/F0xedb/zsh-load.git ~/.oh-my-zsh/load
    fi

    if [[ ! -d ~/bin ]]; then
        git clone https://github.com/F0xedb/helper-scripts.git ~/bin 
    fi


    if [[ ! -f ~/.config/emoji ]]; then
        git clone https://github.com/F0xedb/dotfiles.git ~/.config
    fi

    if [[ ! -d ~/Pictures ]]; then
        mkdir ~/Pictures
        git clone https://github.com/F0xedb/Pictures.git ~/Pictures
    fi

    if [[ "$(which st)" != "/usr/local/bin/st" ]]; then
        cd /tmp
        git clone https://github.com/F0xedb/sucklessterminal.git
        cd sucklessterminal && make && sudo make install       
    fi

    printf "${RED}If your repo's contain uncommited changes pleas commit them\n git add . && git commit -m \"Data about change\"${NC}\n"
    
    cd ~/bin && git pull origin master
    cd ~/.config && git pull origin master
    cd ~/Pictures && git pull origin master
    cd ~/.oh-my-zsh/load && git pull origin master
    cd
    
}

function installarch {
    printf  "${RED}Installing arch${NC}\n"
    if [[ ! -f archinstall ]]; then
        curl https://raw.githubusercontent.com/F0xedb/helper-scripts/master/archinstall
        chmod +x archinstall
    fi
    ./archinstall 
}

function installarchdialog {
    printf "${RED}Installing arch via a dialog${NC}\n"
    if [[ ! -f dialogarchinstall ]]; then
        curl https://raw.githubusercontent.com/F0xedb/helper-scripts/master/dialogarchinstall
        chmod +x dialogarchinstall
    fi
    ./dialogarchinstall 
}


case "$1" in
    ""|"-h"|"--help")
        help
    ;;
    "-u"|"--update")
        update
    ;;
    "-S"*|"-R"*)
        if [[ "$(which yay)" != "/usr/bin/yay" ]]; then
        installyay
        fi
        yay "${@:1}"
    ;;
    "-iso")
        if [ "$(id -u)" == "0" ]; then
            if [ "$2" == "-g" ]; then
                installarchdialog
            else
                installarch
            fi
        else
            printf "${RED} Only root user can install TOS${NC}\n"
        fi    

esac
