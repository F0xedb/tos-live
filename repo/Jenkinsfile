void setBuildStatus(String message, String state) {
  step([
      $class: "GitHubCommitStatusSetter",
      reposSource: [$class: "ManuallyEnteredRepositorySource", url: "https://github.com/F0xedb/tos-live"],
      contextSource: [$class: "ManuallyEnteredCommitContextSource", context: "ci/jenkins/build-status"],
      errorHandlers: [[$class: "ChangingBuildStatusErrorHandler", result: "UNSTABLE"]],
      statusResultSource: [ $class: "ConditionalStatusResultSource", results: [[$class: "AnyBuildResult", message: message, state: state]] ]
  ]);
}


// The arch repo build can only happen on arch based devices.
// You should provide a slave that is running arch
node('archlinux') {
   stage('pull') { 
        git "https://github.com/F0xedb/tos-live.git"
    }
    // Build our applications and fonts and add them to the local repo
    stage('building tarballs'){
        parallel(
          apps: {
            sh "cd repo && sh build.sh -a"
          },
          fonts: {
            sh "cd repo && sh build.sh -f"
          }
          )
    }
    // Build the latest tos kernel and add it to the repo
    // Build takes to long and jenkins slave time out during connection with master
    //stage('build kernel') { 
      //  sh "cd repo && sh build.sh -k 2"
    //}
    // Push local repo to the server
    stage('upload repository') { 
        sh "cd repo && sh upload.sh -y"
    }
    // Generate package list based on the repo
    stage('generate html') {
        sh "sleep 5"
        sh "yes | yay -Syu"
        sh "cd repo && sh genpackagelist.sh"
    }
    // Upload package list to remote repo
    stage('upload html') { 
        sh "cd repo && sh upload.sh -y" 
    }
    post {
       success {
           setBuildStatus("Build succeeded", "SUCCESS");
       }
       failure {
           setBuildStatus("Build failed", "FAILURE");
       }
  }
}
